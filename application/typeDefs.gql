type User {
  _id: ID
  firstName: String!
  lastName: String!
  email: String!
  contactNo: String!
  password: String!
  userName: String!
  dateOfBirth: String!
  dateOfRegistration: String
  profilePic: String
  coverPic: String
  role: String
  love: [Product]
}

type Product {
  _id: ID
  productName: String!
  price: Int!
  description: String!
  comment: [Comment]
  rating: Float
  tag: [String]!
  category: [String]!
  size: [String]!
  color: [String]!
  parent: String
  discountPrice: Int
  picture: [String]!
  dateOfAdd: String
  love: Int
  createdBy: Shop!
}

type Comment {
  _id: ID
  body: String
  commentUser: User
  commentDate: String
  like: Int
}

type Shop {
  _id: ID
  shopName: String!
  shopId: String
  owner: User!
  email: String!
  ownerEmail: String!
  contactNo: String!
  address: String!
  dateOfCreation: String
  logo: String
  coverPic: [Carousel]
  rating: Float
  kudos: Kudos
}

type Carousel {
  _id: ID
  src: String!
  head: String!
  shortDescription: String!
}

type Kudos {
  _id: ID
  name: String
  description: String
  year: String
}

type Token {
  token: String!
}

type Query {
  getProducts: [Product]
  getUser(userName: String!): User
  getCurrentUser: User
  getShop(id: String!): Shop
  getAllShopByaUser(id: String!): [Shop]
}

type Mutation {
  signup(
    firstName: String!
    lastName: String!
    contactNo: String!
    email: String!
    password: String!
    userName: String
    dateOfBirth: String
  ): Token

  signin(userName: String, password: String!): Token

  addProduct(
    productName: String!
    price: Int!
    description: String!
    tag: [String]!
    category: [String]!
    size: [String]!
    color: [String]!
    parent: String
    picture: [String]!
    creatorId: ID
  ): Product!

  createShop(
    shopName: String!
    ownerId: ID!
    ownerEmail: String!
    email: String!
    contactNo: String!
    address: String!
  ): Shop!
}
